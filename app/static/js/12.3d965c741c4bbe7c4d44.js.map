{"version":3,"sources":["webpack:///src/components/Sam/StepSam.vue","webpack:///./src/components/Sam/StepSam.vue?56ec","webpack:///./src/components/Sam/StepSam.vue"],"names":["StepSam","data","_this","this","total","page","listStyle","width","height","my_selection","list_title","distill","build","run","seq","analysis","report","check","note","columns4","type","align","fixed","title","key","sortable","slot","render","h","params","calDays","row","流转开始日期","day","sortType","columns5","data_distill","data_all","loading","computed","data5","current_val","currenStep","$route","step","watch","methods","getApiData","_this2","path","$store","state","hostIp","axios","get","then","response","console","log","catch","error","setPage","Submit1","_this3","post","JSON","parse","localStorage","getItem","result","$Message","info","err","delVal","setItem","stringify_default","myColumns","myData","date","days","s1","Date","replace","getTime","time","parseInt","selSam","selection","saveDate_distill","index","event","提取完成日期","状态","saveDate_build","建库完成日期","saveDate_run","实际上机日期","saveDate_seq","测序完成日期","saveDate_analysis","生信完成日期","saveDate_report","报告完成时间","saveDate_check","审核完成时间","saveDate_note","备注","handleRender","item","_this4","$Modal","confirm","onOk","onCancel","props","value","终止原因","clearable","autofocus","placeholder","on","input","val","mounted","Sam_StepSam","_vm","_h","$createElement","_c","_self","ref","attrs","stripe","columns","size","on-selection-change","scopedSlots","_u","fn","_v","_s","患者姓名","format","on-change","$event","click","page-size","show-elevator","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__"],"mappings":"+HA8DAA,GACAC,KADA,WACA,IAAAC,EAAAC,KACA,OACAC,MAAA,EACAC,KAAA,EACAC,WACAC,MAAA,QACAC,OAAA,SAEAC,gBACAC,YAAAC,SAAA,OACAC,OAAA,OACAC,KAAA,OACAC,KAAA,OACAC,UAAA,OACAC,QAAA,OACAC,OAAA,OACAC,MAAA,QACAC,WAEAC,KAAA,YACAb,MAAA,GACAc,MAAA,SACAC,MAAA,SAGAC,MAAA,KACAC,IAAA,KACAjB,MAAA,IACAkB,UAAA,IAGAF,MAAA,OACAG,KAAA,OACAnB,MAAA,IACAkB,UAAA,IAGAF,MAAA,OACAC,IAAA,OACAjB,MAAA,IACAkB,UAAA,IAGAF,MAAA,KACAC,IAAA,OACAjB,MAAA,IACAkB,UAAA,IAGAF,MAAA,OACAC,IAAA,OACAjB,MAAA,IACAkB,UAAA,EACAH,MAAA,SAGAC,MAAA,OACAC,IAAA,OACAjB,MAAA,IACAkB,UAAA,EACAH,MAAA,SAGAC,MAAA,OACAC,IAAA,OACAjB,MAAA,IACAkB,UAAA,IAGAF,MAAA,OACAC,IAAA,OACAjB,MAAA,IACAkB,UAAA,IAGAF,MAAA,SACAC,IAAA,SACAjB,MAAA,IACAkB,UAAA,IAGAF,MAAA,SACAG,KAAA,SACAnB,MAAA,IACAkB,UAAA,IAGAF,MAAA,SACAG,KAAA,SACAnB,MAAA,IACAkB,UAAA,IAGAF,MAAA,SACAG,KAAA,SACAnB,MAAA,IACAkB,UAAA,IAGAF,MAAA,QACAC,IAAA,QACAjB,MAAA,IACAkB,UAAA,EACAE,OAAA,SAAAC,EAAAC,GACA,OAAAD,EAAA,MACA1B,EAAA4B,QAAAD,EAAAE,IAAAC,OAAA,WAIAT,MAAA,SACAG,KAAA,SACAnB,MAAA,IACAkB,UAAA,IAGAF,MAAA,SACAG,KAAA,SACAnB,MAAA,IACAkB,UAAA,IAGAF,MAAA,QACAC,IAAA,QACAjB,MAAA,IACAkB,UAAA,EACAE,OAAA,SAAAC,EAAAC,GACA,IAAAI,EAAA,EAMA,OAJAA,EADA,MAAAJ,EAAAE,IAAAX,KACA,GAEA,EAEAQ,EAAA,MACA1B,EAAA4B,QAAAD,EAAAE,IAAAC,OAAAC,GAAA,QAIAV,MAAA,SACAG,KAAA,SACAnB,MAAA,IACAkB,UAAA,IAGAF,MAAA,QACAC,IAAA,QACAjB,MAAA,IACAkB,UAAA,EACAE,OAAA,SAAAC,EAAAC,GACA,IAAAI,EAAA,EAMA,OAJAA,EADA,MAAAJ,EAAAE,IAAAX,KACA,GAEA,GAEAQ,EAAA,MACA1B,EAAA4B,QAAAD,EAAAE,IAAAC,OAAAC,GAAA,QAIAV,MAAA,SACAG,KAAA,SACAnB,MAAA,IACAkB,UAAA,IAGAF,MAAA,UACAC,IAAA,QACAjB,MAAA,IACAkB,UAAA,EACAE,OAAA,SAAAC,EAAAC,GACA,IAAAI,EAAA,EAMA,OAJAA,EADA,MAAAJ,EAAAE,IAAAX,KACA,GAEA,GAEAQ,EAAA,MACA1B,EAAA4B,QAAAD,EAAAE,IAAAC,OAAAC,OAIAV,MAAA,KACAC,IAAA,KACAjB,MAAA,IACAkB,UAAA,IAEAF,MAAA,SACAC,IAAA,SACAjB,MAAA,IACAe,MAAA,QACAG,UAAA,EACAS,SAAA,SAGAC,YACAC,gBACAC,YACAC,SAAA,IAGAC,UACAC,MADA,WAIA,OAFArC,KAAAkC,SAEA,MAEAI,YANA,WAOA,IAAAC,EAAAvC,KAAAwC,OAAAd,OAAAe,KAEA,OADAzC,KAAAgB,SACAhB,KAAAO,WAAAgC,GAAA,IAAAnB,QAGAsB,OACAF,OAAA,aAEAG,SACAC,WADA,SACA1C,GAAA,IAAA2C,EAAA7C,KACAA,KAAAmC,SAAA,EACA,IAAAW,EAAA,UAAA9C,KAAA+C,OAAAC,MAAAC,OAAA,qBAAA/C,EACAF,KAAAkD,MACAC,IAAAL,GACAM,KAAA,SAAAC,GACAR,EAAAX,SAAAmB,EAAAvD,UACA+C,EAAA5C,MAAAoD,EAAAvD,KAAAG,MACA4C,EAAAV,SAAA,EACAmB,QAAAC,IAAA,MACAD,QAAAC,IAAAF,EAAAvD,aAEA0D,MAAA,SAAAC,GACAH,QAAAC,IAAAE,MAGAC,QAjBA,SAiBAxD,GACAF,KAAAE,OACAF,KAAA4C,WAAA1C,IAEAyD,QArBA,WAqBA,IAAAC,EAAA5D,KACA8C,EAAA,UAAA9C,KAAA+C,OAAAC,MAAAC,OAAA,qBACAjD,KAAAkD,MACAW,KAAAf,GACAhD,KAAAgE,KAAAC,MAAAC,aAAAC,QAAA,kBAEAb,KAAA,SAAAc,GACAN,EAAAO,SAAAC,KAAA,WACAZ,MAAA,SAAAa,GACAf,QAAAC,IAAAc,MAGAC,OAjCA,WAkCA,IAAA/B,EAAAvC,KAAAwC,OAAAd,OAAAe,KACAa,QAAAC,IAAAhB,GACAyB,aAAAO,QAAA,cAAAC,IAAAxE,KAAAM,eACAN,KAAA2D,WAIAc,UAzCA,WA0CA,IAAAlC,EAAAvC,KAAAwC,OAAAd,OAAAe,KACAiC,EAAA1E,KAAAgB,SACAhB,KAAAgC,YACA0C,EAAA1E,KAAAO,WAAAgC,GAAA,IAAApB,MAAA,QACAuD,EAAA1E,KAAAO,WAAAgC,GAAA,IAAApB,MAAA,QACAnB,KAAAgC,SAAA0C,EACApB,QAAAC,IAAAvD,KAAAO,WAAAgC,GAAA,KAGAZ,QAnDA,SAmDAgD,EAAAC,GAEA,IAAAC,EAAAF,EACAE,EAAA,IAAAC,UAAAf,MAAAc,EAAAE,QAAA,aACA,IACAjD,GADA,IAAAgD,MACAE,UAAAH,EAAAG,UACAC,EAAAC,SAAApD,EAAA,OACA,OAAA8C,EAAAK,EAAA,EACAL,EAAAK,EAEA,GAGAE,OAhEA,SAgEAC,GACApF,KAAAM,aAAA8E,GAEAC,iBAnEA,SAmEAC,EAAAC,GACAvF,KAAAkC,SAAAoD,GAAAE,OAAAD,EACAvF,KAAAkC,SAAAoD,GAAAG,GAAA,QAEAC,eAvEA,SAuEAJ,EAAAC,GACAvF,KAAAkC,SAAAoD,GAAAK,OAAAJ,EACAvF,KAAAkC,SAAAoD,GAAAG,GAAA,QAEAG,aA3EA,SA2EAN,EAAAC,GACAvF,KAAAkC,SAAAoD,GAAAO,OAAAN,EACAvF,KAAAkC,SAAAoD,GAAAG,GAAA,QAEAK,aA/EA,SA+EAR,EAAAC,GACAvF,KAAAkC,SAAAoD,GAAAS,OAAAR,EACAvF,KAAAkC,SAAAoD,GAAAG,GAAA,QAEAO,kBAnFA,SAmFAV,EAAAC,GACAvF,KAAAkC,SAAAoD,GAAAW,OAAAV,EACAvF,KAAAkC,SAAAoD,GAAAG,GAAA,QAEAS,gBAvFA,SAuFAZ,EAAAC,GACAvF,KAAAkC,SAAAoD,GAAAa,OAAAZ,EACAvF,KAAAkC,SAAAoD,GAAAG,GAAA,QAEAW,eA3FA,SA2FAd,EAAAC,GACAvF,KAAAkC,SAAAoD,GAAAe,OAAAd,EACAvF,KAAAkC,SAAAoD,GAAAG,GAAA,QAEAa,cA/FA,SA+FAhB,EAAAC,GACAvF,KAAAkC,SAAAoD,GAAAiB,GAAAhB,GAEAiB,aAlGA,SAkGAC,GAAA,IAAAC,EAAA1G,KACAA,KAAA2G,OAAAC,SACAxF,MAAA,KAAAqF,EAAA,MACAI,KAAA,WAAAH,EAAAvC,SAAAC,KAAA,UACA0C,SAAA,aACAtF,OAAA,SAAAC,GACA,OAAAA,EAAA,SACAsF,OACAC,MAAAP,EAAAQ,KACAhG,KAAA,WACAiG,WAAA,EACAC,WAAA,EACAC,YAAA,WAEAC,IACAC,MAAA,SAAAC,GACAb,EAAAM,MAAAO,WAQAC,QAlVA,WAmVAxH,KAAA4C,WAAA,GACA5C,KAAAyE,cCxXegD,GADEjG,OAzBjB,WAA0B,IAAAkG,EAAA1H,KAAa2H,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAAA,EAAA,SAA6BE,IAAA,QAAAC,OAAmBC,OAAA,GAAAC,QAAAR,EAAA1F,SAAAG,QAAAuF,EAAAvF,QAAA9B,OAAA,MAAAP,KAAA4H,EAAAxF,SAAAiG,KAAA,SAA2Gd,IAAKe,sBAAAV,EAAAvC,QAAiCkD,YAAAX,EAAAY,KAAsBjH,IAAA,OAAAkH,GAAA,SAAAR,GAChT,IAAAnG,EAAAmG,EAAAnG,IACA,OAAAiG,EAAA,UAAAH,EAAAc,GAAAd,EAAAe,GAAA7G,EAAA8G,aAAoDrH,IAAA,SAAAkH,GAAA,SAAAR,GACpD,IAAAnG,EAAAmG,EAAAnG,IACA0D,EAAAyC,EAAAzC,MACA,OAAAuC,EAAA,cAAyBG,OAAOW,OAAA,aAAA1H,KAAA,OAAAmG,YAAAxF,EAAA4D,QAA6D6B,IAAKuB,YAAA,SAAAC,GAA6B,OAAAnB,EAAArC,iBAAAC,EAAAuD,WAAkDxH,IAAA,SAAAkH,GAAA,SAAAR,GACjL,IAAAnG,EAAAmG,EAAAnG,IACA0D,EAAAyC,EAAAzC,MACA,OAAAuC,EAAA,cAAyBG,OAAOW,OAAA,aAAA1H,KAAA,OAAAmG,YAAAxF,EAAA+D,QAA6D0B,IAAKuB,YAAA,SAAAC,GAA6B,OAAAnB,EAAAhC,eAAAJ,EAAAuD,WAAgDxH,IAAA,SAAAkH,GAAA,SAAAR,GAC/K,IAAAnG,EAAAmG,EAAAnG,IACA0D,EAAAyC,EAAAzC,MACA,OAAAuC,EAAA,cAAyBG,OAAOW,OAAA,aAAA1H,KAAA,OAAAmG,YAAAxF,EAAAiE,QAA6DwB,IAAKuB,YAAA,SAAAC,GAA6B,OAAAnB,EAAA9B,aAAAN,EAAAuD,WAA8CxH,IAAA,SAAAkH,GAAA,SAAAR,GAC7K,IAAAnG,EAAAmG,EAAAnG,IACA0D,EAAAyC,EAAAzC,MACA,OAAAuC,EAAA,cAAyBG,OAAOW,OAAA,aAAA1H,KAAA,OAAAmG,YAAAxF,EAAAmE,QAA6DsB,IAAKuB,YAAA,SAAAC,GAA6B,OAAAnB,EAAA5B,aAAAR,EAAAuD,WAA8CxH,IAAA,SAAAkH,GAAA,SAAAR,GAC7K,IAAAnG,EAAAmG,EAAAnG,IACA0D,EAAAyC,EAAAzC,MACA,OAAAuC,EAAA,cAAyBG,OAAOW,OAAA,aAAA1H,KAAA,OAAAmG,YAAAxF,EAAAqE,QAA6DoB,IAAKuB,YAAA,SAAAC,GAA6B,OAAAnB,EAAA1B,kBAAAV,EAAAuD,WAAmDxH,IAAA,SAAAkH,GAAA,SAAAR,GAClL,IAAAnG,EAAAmG,EAAAnG,IACA0D,EAAAyC,EAAAzC,MACA,OAAAuC,EAAA,cAAyBG,OAAOW,OAAA,aAAA1H,KAAA,OAAAmG,YAAAxF,EAAAuE,QAA6DkB,IAAKuB,YAAA,SAAAC,GAA6B,OAAAnB,EAAAxB,gBAAAZ,EAAAuD,WAAiDxH,IAAA,SAAAkH,GAAA,SAAAR,GAChL,IAAAnG,EAAAmG,EAAAnG,IACA0D,EAAAyC,EAAAzC,MACA,OAAAuC,EAAA,cAAyBG,OAAOW,OAAA,aAAA1H,KAAA,OAAAmG,YAAAxF,EAAAyE,QAA6DgB,IAAKuB,YAAA,SAAAC,GAA6B,OAAAnB,EAAAtB,eAAAd,EAAAuD,cAAiDnB,EAAAc,GAAA,KAAAX,EAAA,UAA2BG,OAAO/G,KAAA,WAAiBoG,IAAKyB,MAAApB,EAAApD,UAAoBoD,EAAAc,GAAA,QAAAX,EAAA,QAA4BG,OAAO/H,MAAAyH,EAAAzH,MAAAkI,KAAA,QAAAY,YAAA,GAAAC,gBAAA,IAAmE3B,IAAKuB,YAAAlB,EAAAhE,YAAyB,IAE/WuF,oBCXjBC,EAdyBC,EAAQ,OAcjCC,CACEvJ,EACA4H,GATF,EAEA,KAEA,KAEA,MAUe4B,EAAA,QAAAH,EAAiB","file":"static/js/12.3d965c741c4bbe7c4d44.js","sourcesContent":["<template>\n<div>\n    <Table stripe\n           :columns=\"columns5\"\n           :loading=\"loading\"\n           height=\"550\"\n           :data=\"data_all\"\n           size=\"small\"\n           @on-selection-change='selSam'\n           ref=\"table\">\n           <template slot-scope=\"{ row }\" slot=\"患者姓名\">\n            <strong>{{ row.患者姓名 }}</strong>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"提取完成日期\">\n            <DatePicker format='yyyy.MM.dd' type='date'\n            :placeholder=\"row.提取完成日期\"\n            @on-change='saveDate_distill(index,$event)'>\n            </DatePicker>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"建库完成日期\">\n            <DatePicker format='yyyy.MM.dd' type='date'\n            :placeholder=\"row.建库完成日期\"\n            @on-change='saveDate_build(index,$event)'>\n            </DatePicker>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"实际上机日期\">\n            <DatePicker format='yyyy.MM.dd' type='date'\n            :placeholder=\"row.实际上机日期\"\n            @on-change='saveDate_run(index,$event)'>\n            </DatePicker>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"测序完成日期\">\n            <DatePicker format='yyyy.MM.dd' type='date'\n            :placeholder=\"row.测序完成日期\"\n            @on-change='saveDate_seq(index,$event)'>\n            </DatePicker>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"生信完成日期\">\n            <DatePicker format='yyyy.MM.dd' type='date'\n            :placeholder=\"row.生信完成日期\"\n            @on-change='saveDate_analysis(index,$event)'>\n            </DatePicker>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"报告完成时间\">\n            <DatePicker format='yyyy.MM.dd' type='date'\n            :placeholder=\"row.报告完成时间\"\n            @on-change='saveDate_report(index,$event)'>\n            </DatePicker>\n        </template>\n        <template slot-scope=\"{ row, index }\" slot=\"审核完成时间\">\n            <DatePicker format='yyyy.MM.dd' type='date'\n            :placeholder=\"row.审核完成时间\"\n            @on-change='saveDate_check(index,$event)'>\n            </DatePicker>\n        </template>\n           </Table>\n           <Button type=\"primary\" @click=\"delVal\"\n            >保存</Button><Page :total=\"total\" size=\"small\" :page-size=\"15\" show-elevator\n            @on-change=\"setPage\"/>\n</div>\n</template>\n<script>\nexport default {\n  data () {\n    return {\n      total: 0,\n      page: 0,\n      listStyle: {\n        width: '600px',\n        height: '400px'\n      },\n      my_selection: [],\n      list_title: {'distill': [10, 20],\n        'build': [11, 20],\n        'run': [12, 13],\n        'seq': [14, 20],\n        'analysis': [15, 16],\n        'report': [17, 18],\n        'check': [19, 20],\n        'note': [21, 20]},\n      columns4: [\n        {\n          type: 'selection',\n          width: 60,\n          align: 'center',\n          'fixed': 'left'\n        },\n        {\n          'title': '状态',\n          'key': '状态',\n          'width': 120,\n          'sortable': true\n        },\n        {\n          'title': '患者姓名',\n          'slot': '患者姓名',\n          'width': 120,\n          'sortable': true\n        },\n        {\n          'title': '检测项目',\n          'key': '检测项目',\n          'width': 120,\n          'sortable': true\n        },\n        {\n          'title': '肿瘤',\n          'key': '病理诊断',\n          'width': 120,\n          'sortable': true\n        },\n        {\n          'title': '申请单号',\n          'key': '申请单号',\n          'width': 150,\n          'sortable': true,\n          'fixed': 'left'\n        },\n        {\n          'title': '迈景编号',\n          'key': '迈景编号',\n          'width': 120,\n          'sortable': true,\n          'fixed': 'left'\n        },\n        {\n          'title': '样本类型',\n          'key': '样本类型',\n          'width': 120,\n          'sortable': true\n        },\n        {\n          'title': '收样日期',\n          'key': '收样日期',\n          'width': 120,\n          'sortable': true\n        },\n        {\n          'title': '流转开始日期',\n          'key': '流转开始日期',\n          'width': 150,\n          'sortable': true\n        },\n        {\n          'title': '提取完成日期',\n          'slot': '提取完成日期',\n          'width': 150,\n          'sortable': true\n        },\n        {\n          'title': '建库完成日期',\n          'slot': '建库完成日期',\n          'width': 150,\n          'sortable': true\n        },\n        {\n          'title': '实际上机日期',\n          'slot': '实际上机日期',\n          'width': 150,\n          'sortable': true\n        },\n        {\n          'title': '上机倒计时',\n          'key': '上机倒计时',\n          'width': 150,\n          'sortable': true,\n          render: (h, params) => {\n            return h('div',\n              this.calDays(params.row.流转开始日期, 4) + '天')\n          }\n        },\n        {\n          'title': '测序完成日期',\n          'slot': '测序完成日期',\n          'width': 150,\n          'sortable': true\n        },\n        {\n          'title': '生信完成日期',\n          'slot': '生信完成日期',\n          'width': 150,\n          'sortable': true\n        },\n        {\n          'title': '生信倒计时',\n          'key': '生信倒计时',\n          'width': 150,\n          'sortable': true,\n          render: (h, params) => {\n            let day = 0\n            if (params.row.type === 'b') {\n              day = 11\n            } else {\n              day = 9\n            }\n            return h('div',\n              this.calDays(params.row.流转开始日期, day) + '天')\n          }\n        },\n        {\n          'title': '报告完成时间',\n          'slot': '报告完成时间',\n          'width': 150,\n          'sortable': true\n        },\n        {\n          'title': '报告倒计时',\n          'key': '报告倒计时',\n          'width': 150,\n          'sortable': true,\n          render: (h, params) => {\n            let day = 0\n            if (params.row.type === 'b') {\n              day = 13\n            } else {\n              day = 10\n            }\n            return h('div',\n              this.calDays(params.row.流转开始日期, day) + '天')\n          }\n        },\n        {\n          'title': '审核完成时间',\n          'slot': '审核完成时间',\n          'width': 150,\n          'sortable': true\n        },\n        {\n          'title': '审核倒计时/天',\n          'key': '审核倒计时',\n          'width': 150,\n          'sortable': true,\n          render: (h, params) => {\n            let day = 0\n            if (params.row.type === 'b') {\n              day = 14\n            } else {\n              day = 11\n            }\n            return h('div',\n              this.calDays(params.row.流转开始日期, day))\n          }\n        },\n        {\n          'title': '备注',\n          'key': '备注',\n          'width': 120,\n          'sortable': true\n        }, {\n          'title': '预计完成时间',\n          'key': '预计完成时间',\n          'width': 150,\n          'fixed': 'right',\n          'sortable': true,\n          'sortType': 'desc'\n        }\n      ],\n      columns5: [],\n      data_distill: [],\n      data_all: [],\n      loading: false\n    }\n  },\n  computed: {\n    data5 () {\n      let myData = this.data_all\n      // let currenStep = this.$route.params.step\n      return myData['data']\n    },\n    current_val () {\n      let currenStep = this.$route.params.step\n      let myData = this.columns4\n      return myData[this.list_title[currenStep][0]].title\n    }\n  },\n  watch: {\n    '$route': 'myColumns'\n  },\n  methods: {\n    getApiData (page) {\n      this.loading = true\n      const path = 'http://' + this.$store.state.hostIp + '/flow/api/flowing/' + page\n      this.axios\n        .get(path)\n        .then(response => {\n          this.data_all = response.data.data\n          this.total = response.data.total\n          this.loading = false\n          console.log('成功')\n          console.log(response.data.data)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    },\n    setPage (page) {\n      this.page = page\n      this.getApiData(page)\n    },\n    Submit1 () {\n      const path = 'http://' + this.$store.state.hostIp + '/flow/api/submit1/'\n      this.axios\n        .post(path, {\n          data: JSON.parse(localStorage.getItem('select_list'))\n        })\n        .then((result) => {\n          this.$Message.info('保存成功!')\n        }).catch((err) => {\n          console.log(err)\n        })\n    },\n    delVal () {\n      let currenStep = this.$route.params.step\n      console.log(currenStep)\n      localStorage.setItem('select_list', JSON.stringify(this.my_selection))\n      this.Submit1()\n      // localStorage.removeItem('select_list')\n      // this.$store.state.list_select = []\n    },\n    myColumns () {\n      let currenStep = this.$route.params.step\n      let myData = this.columns4\n      this.columns5 = []\n      myData[this.list_title[currenStep][0]].fixed = 'right'\n      myData[this.list_title[currenStep][1]].fixed = 'right'\n      this.columns5 = myData\n      console.log(this.list_title[currenStep][0])\n      // myData = []\n    },\n    calDays (date, days) {\n      // date eg:'2019.07.31'(str) days: 9(int)\n      let s1 = date\n      s1 = new Date(Date.parse(s1.replace(/\\./g, '/')))\n      let s2 = new Date()// 当前日期：2017-04-24\n      let day = s2.getTime() - s1.getTime()\n      let time = parseInt(day / (1000 * 60 * 60 * 24))\n      if (days - time > 0) {\n        return days - time\n      } else {\n        return 0\n      }\n    },\n    selSam (selection) {\n      this.my_selection = selection\n    },\n    saveDate_distill (index, event) {\n      this.data_all[index].提取完成日期 = event\n      this.data_all[index].状态 = '提取完成'\n    },\n    saveDate_build (index, event) {\n      this.data_all[index].建库完成日期 = event\n      this.data_all[index].状态 = '提取完成'\n    },\n    saveDate_run (index, event) {\n      this.data_all[index].实际上机日期 = event\n      this.data_all[index].状态 = '上机完成'\n    },\n    saveDate_seq (index, event) {\n      this.data_all[index].测序完成日期 = event\n      this.data_all[index].状态 = '测序完成'\n    },\n    saveDate_analysis (index, event) {\n      this.data_all[index].生信完成日期 = event\n      this.data_all[index].状态 = '生信完成'\n    },\n    saveDate_report (index, event) {\n      this.data_all[index].报告完成时间 = event\n      this.data_all[index].状态 = '报告完成'\n    },\n    saveDate_check (index, event) {\n      this.data_all[index].审核完成时间 = event\n      this.data_all[index].状态 = '审核完成'\n    },\n    saveDate_note (index, event) {\n      this.data_all[index].备注 = event\n    },\n    handleRender (item) {\n      this.$Modal.confirm({\n        title: '终止' + item + '的流转',\n        onOk: () => { this.$Message.info('点击了确定') },\n        onCancel: () => {},\n        render: (h) => {\n          return h('Input', {\n            props: {\n              value: item.终止原因,\n              type: 'textarea',\n              clearable: true,\n              autofocus: true,\n              placeholder: '请填写终止原因'\n            },\n            on: {\n              input: (val) => {\n                this.value = val\n              }\n            }\n          })\n        }\n      })\n    }\n  },\n  mounted () {\n    this.getApiData(1)\n    this.myColumns()\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Sam/StepSam.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Table',{ref:\"table\",attrs:{\"stripe\":\"\",\"columns\":_vm.columns5,\"loading\":_vm.loading,\"height\":\"550\",\"data\":_vm.data_all,\"size\":\"small\"},on:{\"on-selection-change\":_vm.selSam},scopedSlots:_vm._u([{key:\"患者姓名\",fn:function(ref){\nvar row = ref.row;\nreturn [_c('strong',[_vm._v(_vm._s(row.患者姓名))])]}},{key:\"提取完成日期\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('DatePicker',{attrs:{\"format\":\"yyyy.MM.dd\",\"type\":\"date\",\"placeholder\":row.提取完成日期},on:{\"on-change\":function($event){return _vm.saveDate_distill(index,$event)}}})]}},{key:\"建库完成日期\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('DatePicker',{attrs:{\"format\":\"yyyy.MM.dd\",\"type\":\"date\",\"placeholder\":row.建库完成日期},on:{\"on-change\":function($event){return _vm.saveDate_build(index,$event)}}})]}},{key:\"实际上机日期\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('DatePicker',{attrs:{\"format\":\"yyyy.MM.dd\",\"type\":\"date\",\"placeholder\":row.实际上机日期},on:{\"on-change\":function($event){return _vm.saveDate_run(index,$event)}}})]}},{key:\"测序完成日期\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('DatePicker',{attrs:{\"format\":\"yyyy.MM.dd\",\"type\":\"date\",\"placeholder\":row.测序完成日期},on:{\"on-change\":function($event){return _vm.saveDate_seq(index,$event)}}})]}},{key:\"生信完成日期\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('DatePicker',{attrs:{\"format\":\"yyyy.MM.dd\",\"type\":\"date\",\"placeholder\":row.生信完成日期},on:{\"on-change\":function($event){return _vm.saveDate_analysis(index,$event)}}})]}},{key:\"报告完成时间\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('DatePicker',{attrs:{\"format\":\"yyyy.MM.dd\",\"type\":\"date\",\"placeholder\":row.报告完成时间},on:{\"on-change\":function($event){return _vm.saveDate_report(index,$event)}}})]}},{key:\"审核完成时间\",fn:function(ref){\nvar row = ref.row;\nvar index = ref.index;\nreturn [_c('DatePicker',{attrs:{\"format\":\"yyyy.MM.dd\",\"type\":\"date\",\"placeholder\":row.审核完成时间},on:{\"on-change\":function($event){return _vm.saveDate_check(index,$event)}}})]}}])}),_vm._v(\" \"),_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.delVal}},[_vm._v(\"保存\")]),_c('Page',{attrs:{\"total\":_vm.total,\"size\":\"small\",\"page-size\":15,\"show-elevator\":\"\"},on:{\"on-change\":_vm.setPage}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-201aa041\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Sam/StepSam.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./StepSam.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./StepSam.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-201aa041\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./StepSam.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Sam/StepSam.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}